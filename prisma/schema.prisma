// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int    @id @default(autoincrement())
  firstName String
  lastName  String
  email     String
  password  String

  clothes    Clothes[]
  outfit     Outfit[]
  collection Collection[]
  planner    Planner[]
  prompt     Prompt[]
}

model Clothes {
  id          Int      @id @default(autoincrement())
  userId      Int
  name        String
  type        String
  color       String
  brand       String
  photoUrl    String   @db.Text
  createdAt   DateTime @default(now())
  description String   @db.Text

  outfitClothes OutfitClothes[]

  user User @relation(fields: [userId], references: [id])
}

model Outfit {
  id        Int      @id @default(autoincrement())
  userId    Int
  createdAt DateTime @default(now())

  outfitClothes    OutfitClothes[]
  collectionOutfit CollectionOutfit[]
  planner          Planner[]

  user User @relation(fields: [userId], references: [id])
}

model OutfitClothes {
  id        Int @id @default(autoincrement())
  outfitId  Int
  clothesId Int

  outfit  Outfit  @relation(fields: [outfitId], references: [id])
  clothes Clothes @relation(fields: [clothesId], references: [id])
}

model Collection {
  id        Int      @id @default(autoincrement())
  userId    Int
  name      String
  type      String
  createdAt DateTime @default(now())

  collectionOutfit CollectionOutfit[]

  user User @relation(fields: [userId], references: [id])
}

model CollectionOutfit {
  id           Int @id @default(autoincrement())
  collectionId Int
  outfitId     Int

  collection Collection @relation(fields: [collectionId], references: [id])
  outfit     Outfit     @relation(fields: [outfitId], references: [id])
}

model Planner {
  id       Int      @id @default(autoincrement())
  date     DateTime
  userId   Int
  outfitId Int

  outfit Outfit @relation(fields: [outfitId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
}

model Prompt {
  id            Int      @id @default(autoincrement())
  userId        Int
  createdAt     DateTime @default(now())
  userMessage   String   @db.Text
  resultMessage String   @db.Text

  user User @relation(fields: [userId], references: [id])
}
